{"mappings":"ACEA,IAGQ,EAHF,EAAe,SAAS,aAAa,CAAC,MAwB5C,SAAS,EAAY,CAAS,EAE5B,IAAM,EAAS,OADS,EAAU,OAAO,CAAC,aAAc,KAGxD,OAAO,MAAM,GAAU,EAAI,CAC7B,CAxBE,CAFM,EAAe,MAAM,IAAI,CAAC,AA4BzB,EA5BuC,QAAQ,GAEzC,IAAI,CAAC,SAAC,CAAA,CAAG,CAAtB,EACE,IAAM,EAAU,EAAY,EAAE,OAAO,CAAC,MAAM,EAG5C,OAAO,AAFS,EAAY,EAAE,OAAO,CAAC,MAAM,EAE3B,CACnB,GAEA,EAAa,OAAO,CAAC,SAAC,CAAtB,EAA+B,OAAA,AAmBxB,EAnBsC,WAAW,CAAC,E,GAIlD,MAAM,IAAI,CAAC,AAiBP,EAjBqB,QAAQ,EAAE,GAAG,CAAC,SAAC,CAA/C,EAAyD,MAAA,CACvD,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAY,EAAK,OAAO,CAAC,MAAM,EACvC,IAAK,OAAO,EAAK,OAAO,CAAC,GAAG,CAC9B,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar employeeList = document.querySelector(\"ul\");\nfunction sortList(listContainer) {\n    var listElements = Array.from(listContainer.children);\n    listElements.sort(function(a, b) {\n        var salaryA = parseSalary(a.dataset.salary);\n        var salaryB = parseSalary(b.dataset.salary);\n        return salaryB - salaryA;\n    });\n    listElements.forEach(function(item) {\n        return listContainer.appendChild(item);\n    });\n}\nfunction getEmployees(listContainer) {\n    return Array.from(listContainer.children).map(function(item) {\n        return {\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: parseSalary(item.dataset.salary),\n            age: Number(item.dataset.age)\n        };\n    });\n}\nfunction parseSalary(salaryStr) {\n    var sanitizedSalary = salaryStr.replace(/[^0-9.-]+/g, \"\");\n    var salary = Number(sanitizedSalary);\n    return isNaN(salary) ? 0 : salary;\n}\nsortList(employeeList);\ngetEmployees(employeeList);\n\n//# sourceMappingURL=index.12ffa658.js.map\n","'use strict';\n\nconst employeeList = document.querySelector('ul');\n\nfunction sortList(listContainer) {\n  const listElements = Array.from(listContainer.children);\n\n  listElements.sort((a, b) => {\n    const salaryA = parseSalary(a.dataset.salary);\n    const salaryB = parseSalary(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  listElements.forEach((item) => listContainer.appendChild(item));\n}\n\nfunction getEmployees(listContainer) {\n  return Array.from(listContainer.children).map((item) => ({\n    name: item.textContent.trim(),\n    position: item.dataset.position,\n    salary: parseSalary(item.dataset.salary),\n    age: Number(item.dataset.age),\n  }));\n}\n\nfunction parseSalary(salaryStr) {\n  const sanitizedSalary = salaryStr.replace(/[^0-9.-]+/g, '');\n  const salary = Number(sanitizedSalary);\n\n  return isNaN(salary) ? 0 : salary;\n}\n\nsortList(employeeList);\n\ngetEmployees(employeeList);\n"],"names":["listElements","employeeList","document","querySelector","parseSalary","salaryStr","salary","Number","replace","isNaN","Array","from","listContainer","children","sort","a","b","salaryA","dataset","salaryB","forEach","item","appendChild","map","name","textContent","trim","position","age"],"version":3,"file":"index.12ffa658.js.map"}